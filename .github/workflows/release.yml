name: Publish

on:
  milestone:
    types: [closed]

jobs:
  net:
    name: Compile Software
    runs-on: windows-latest

    outputs:
      installfile: ${{ steps.install_name.outputs.filename }}

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0

    - name: Setup msbuild
      uses: microsoft/setup-msbuild@v2

    - name: Compile code
      run: msbuild -r -p:Version=${{ github.event.milestone.title }} -p:Configuration=Release

    - name: Remove unrequired files
      run: Remove-Item ScreenPixelRuler2/bin/Release/net8.0-windows7.0/* -include *.pdb
      shell: pwsh

    - name: Upload compiled artifacts
      uses: actions/upload-artifact@v4
      with:
        name: compiled-files
        path: ScreenPixelRuler2/bin/Release/net8.0-windows7.0

    - name: Compile installer
      run: iscc Deployment\Installer\Installer.iss

    - name: Get installer file name
      id: install_name
      run: echo "filename=$((Get-ChildItem Deployment\Installer\Output\*.exe)[0].Name)" >> $GITHUB_OUTPUT
      shell: pwsh

    - name: Upload deployment artifacts
      uses: actions/upload-artifact@v4
      with:
        name: deployment-files
        path: |
          Deployment/Installer/Output/${{ steps.install_name.outputs.filename }}
          Deployment/Choco
          Resources
          LICENSE.md
          .github/release-notes.yml

  net-deploy:
    name: Publish Github Release
    runs-on: ubuntu-latest
    needs: net

    steps:
    - name: Download deployment artifacts
      uses: actions/download-artifact@v4
      with: 
        name: deployment-files

    - name: Create release notes
      uses: Cossey/release-notes-generator-action@v2.1.4
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        OUTPUT_FOLDER: temp_release_notes

    - name: Upload release note artifact
      uses: actions/upload-artifact@v4
      with:
        name: release-notes
        path: temp_release_notes/changelog.md

    - name: Create release draft
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.event.milestone.title }}
        release_name: Release ${{ github.event.milestone.title }}
        body_path: temp_release_notes/changelog.md
        draft: true
        prerelease: false

    - name: Upload installer
      uses: actions/upload-release-asset@v1.0.2
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./Deployment/Installer/Output/${{ needs.net.outputs.installfile }}
        asset_name: ${{ needs.net.outputs.installfile }}
        asset_content_type: application/octet-stream

    - name: Publish release
      uses: eregon/publish-release@v1.0.3
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        release_id: ${{ steps.create_release.outputs.id }}

  net-choco:
    name: Publish Chocolatey Release
    runs-on: windows-latest
    needs: net

    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts

    - name: Setup package details
      run: |
        $content = Get-Content -Path 'artifacts/deployment-files/Deployment/Choco/screenpixelruler.nuspec'
        $content = $content -replace '%version%', '${{ github.event.milestone.title }}'
        $content = $content -replace '%releasenotes%', (Get-Content -Path 'artifacts/release-notes/changelog.md')
        $content | Set-Content -Path 'artifacts/deployment-files/Deployment/Choco/screenpixelruler.nuspec'
      shell: pwsh

    - name: Copy software to package
      run: |
        Copy-Item -Path 'artifacts/compiled-files/*' -Destination 'artifacts/deployment-files/Deployment/Choco/tools'
        Copy-Item -Path 'artifacts/deployment-files/Resources/*.thm' -Destination 'artifacts/deployment-files/Deployment/Choco/tools'
        Copy-Item -Path 'artifacts/deployment-files/LICENSE.md' -Destination 'artifacts/deployment-files/Deployment/Choco/tools'
      shell: pwsh
    
    - name: Create package
      run: choco pack screenpixelruler.nuspec
      working-directory: artifacts/deployment-files/Deployment/Choco

    - name: Upload package artifact
      uses: actions/upload-artifact@v4
      with:
        name: package-file
        path: artifacts/deployment-files/Deployment/Choco/screenpixelruler.${{ github.event.milestone.title }}.nupkg

    - name: Upload package to chocolatey repository
      run: choco push screenpixelruler.${{ github.event.milestone.title }}.nupkg --source https://push.chocolatey.org/ --api-key=${{ secrets.CHOCO_API_KEY }}
      working-directory: artifacts/deployment-files/Deployment/Choco
  
  help:
    name: Build Help
    runs-on: macOS-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup R
        uses: r-lib/actions/setup-r@v2
      - name: Setup Pandoc
        uses: r-lib/actions/setup-pandoc@v2
      - name: Setup Tinytex
        uses: r-lib/actions/setup-tinytex@v2
      - name: Setup rmarkdown
        run: Rscript -e 'install.packages(c("rmarkdown","bookdown"))'
      - name: Build HTML
        run: |
          cd Help
          Rscript -e "bookdown::render_book('index.Rmd', 'bookdown::gitbook', params = list(version = '${{ github.event.milestone.title }}'))"
      - name: Build ePub
        run: |
          cd Help
          Rscript -e "bookdown::render_book('index.Rmd', 'bookdown::epub_book', params = list(version = '${{ github.event.milestone.title }}'))"
      - name: Build PDF
        run: |
          cd Help
          Rscript -e "bookdown::render_book('index.Rmd', 'bookdown::pdf_book', params = list(version = '${{ github.event.milestone.title }}'))"
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: Help
          path: Help/_book/

  help-deploy:
    name: Deploy Help
    runs-on: ubuntu-latest
    needs: help
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: Help
          path: Help/_book/
      - name: Deploy to Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          folder: Help/_book/
          target-folder: help/${{ github.event.milestone.title }}
      - run: |
          echo "::notice title=Bookdown Deployment::Accessible at https://cossey.github.io/ScreenPixelRuler2/help/${{ github.event.milestone.title }}/"
